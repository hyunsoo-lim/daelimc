[{"D:\\work\\daelimc\\src\\daelimplan\\daelimplaninsert.js":"1","D:\\work\\daelimc\\src\\daelimplan\\daelim_product_dto.js":"2","D:\\work\\daelimc\\src\\index.js":"3","D:\\work\\daelimc\\src\\daelimplan\\daelimplandetail.js":"4","D:\\work\\daelimc\\src\\daelimplan\\daelimplansearch.js":"5","D:\\work\\daelimc\\src\\daelimplan\\daelim_editor.js":"6","D:\\work\\daelimc\\src\\daelimplan\\daelimplan.js":"7","D:\\work\\daelimc\\src\\daelimplan\\daelim_editor_viewer.js":"8","D:\\work\\daelimc\\src\\daelim\\daelimcmainpage.js":"9","D:\\work\\daelimc\\src\\App.js":"10","D:\\work\\daelimc\\src\\daelim\\daelimMainPage\\menuani.js":"11","D:\\work\\daelimc\\src\\daelim\\daelimMainPage\\reactSlider.js":"12","D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\dealimcmenu.js":"13","D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\menuani.js":"14","D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\menuunderani.js":"15","D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\reactSlider.js":"16","D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\mainbody.js":"17","D:\\work\\daelimc\\src\\daelim\\daelimabout\\daelimaboutus.js":"18","D:\\work\\daelimc\\src\\daelim\\daelimcontact\\daelimcontactus.js":"19","D:\\work\\daelimc\\src\\daelim\\daelimcontact\\contactform.js":"20","D:\\work\\daelimc\\src\\daelim\\daelimabout\\aboutmenu.js":"21","D:\\work\\daelimc\\src\\daelim\\daelimabout\\kakaomap.js":"22","D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\footer.js":"23","D:\\work\\daelimc\\src\\daelim\\daelimproduct\\product.js":"24","D:\\work\\daelimc\\src\\daelim\\daelimproduct\\productsearch.js":"25","D:\\work\\daelimc\\src\\daelim\\daelimproduct\\productdto.js":"26"},{"size":6308,"mtime":1616374338784,"results":"27","hashOfConfig":"28"},{"size":1230,"mtime":1616397718266,"results":"29","hashOfConfig":"28"},{"size":517,"mtime":1614910745365,"results":"30","hashOfConfig":"28"},{"size":1580,"mtime":1614910745337,"results":"31","hashOfConfig":"28"},{"size":2044,"mtime":1615970735261,"results":"32","hashOfConfig":"28"},{"size":4779,"mtime":1616396828552,"results":"33","hashOfConfig":"28"},{"size":7001,"mtime":1616397705840,"results":"34","hashOfConfig":"28"},{"size":1493,"mtime":1614910745335,"results":"35","hashOfConfig":"28"},{"size":1369,"mtime":1621388907585,"results":"36","hashOfConfig":"28"},{"size":648,"mtime":1618215029415,"results":"37","hashOfConfig":"28"},{"size":836,"mtime":1617696835923,"results":"38","hashOfConfig":"28"},{"size":1373,"mtime":1617696835994,"results":"39","hashOfConfig":"28"},{"size":7601,"mtime":1621391671738,"results":"40","hashOfConfig":"28"},{"size":1322,"mtime":1620875035174,"results":"41","hashOfConfig":"28"},{"size":627,"mtime":1621326365822,"results":"42","hashOfConfig":"28"},{"size":1315,"mtime":1621390623770,"results":"43","hashOfConfig":"28"},{"size":602,"mtime":1621389632427,"results":"44","hashOfConfig":"28"},{"size":341,"mtime":1619589730082,"results":"45","hashOfConfig":"28"},{"size":798,"mtime":1621403504959,"results":"46","hashOfConfig":"28"},{"size":3206,"mtime":1621403526643,"results":"47","hashOfConfig":"28"},{"size":3254,"mtime":1620892675251,"results":"48","hashOfConfig":"28"},{"size":1107,"mtime":1620863996994,"results":"49","hashOfConfig":"28"},{"size":2422,"mtime":1621411194443,"results":"50","hashOfConfig":"28"},{"size":351,"mtime":1621391500420,"results":"51","hashOfConfig":"28"},{"size":3921,"mtime":1621391517347,"results":"52","hashOfConfig":"28"},{"size":1115,"mtime":1621391522849,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1sgkib2",{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\work\\daelimc\\src\\daelimplan\\daelimplaninsert.js",["116"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport './daelimp.css';\r\nimport MyEditor from './daelim_editor';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass DaelimPlanInsert extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= { params  : {download: null}, uploadfile:[]}\r\n        this.handleClick=this.handleClick.bind(this)\r\n        this.handleClickFile=this.handleClickFile.bind(this)\r\n        this.addUploadElement=this.addUploadElement.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleClick=(e)=>{\r\n        const nextState=this.state.params;\r\n        nextState[e.target.name]=e.target.value;\r\n        this.setState({params:nextState});\r\n        console.log(nextState)\r\n        console.log(this.state.params.type);\r\n\r\n    }\r\n\r\n    handleClickFile =(e)=>{\r\n        let nextUploadFile= this.state.uploadfile;\r\n        const targetfile=e.target.files[0];\r\n        console.log(targetfile.name);\r\n\r\n        // const params_src={};\r\n        const nextState=this.state.params;\r\n     \r\n       \r\n\r\n        if(nextState.download != null){\r\n            let jsonparse=JSON.parse(nextState.download);\r\n            jsonparse.data.push(targetfile.name);\r\n            let jsonstr=JSON.stringify(jsonparse);\r\n            nextState[\"download\"]=jsonstr;\r\n            console.log(\"params_src11\");\r\n            console.log(nextState);\r\n        }else{\r\n            let jsonstr=JSON.stringify({data:[targetfile.name]});\r\n            nextState[\"download\"]=jsonstr;\r\n            console.log(\"params_src22\");\r\n            console.log(nextState);\r\n        }\r\n        \r\n        this.setState({params:nextState});\r\n       \r\n        nextUploadFile.push(e.target.files[0]);\r\n        console.log(nextUploadFile);\r\n        this.setState({uploadfile: nextUploadFile});\r\n    }\r\n\r\n\r\n    //에디터의 내용 통채로 가져와서 setstate \r\n    textHandler=(value)=>{\r\n        let nextState=this.state.params;\r\n        nextState[\"text1\"]=JSON.stringify(value);\r\n        this.setState({params:nextState});\r\n        console.log(this.state.params.text1);\r\n    }\r\n\r\n\r\n    //다운로드 파일 업로드시 추가로 넣을 input 생성하는 function\r\n    addUploadElement=()=>{\r\n        const newDIV = document.createElement(\"input\");\r\n        newDIV.setAttribute(\"class\",\"daelim_ins_from3\");\r\n        newDIV.setAttribute(\"type\",\"file\");\r\n        newDIV.setAttribute(\"name\",\"src\");\r\n        newDIV.onchange=this.handleClickFile;\r\n        document.getElementById(\"daelim_ins_fileupload_wrapper\").appendChild(newDIV);\r\n    }\r\n\r\n\r\n\r\n    //db 입력 파일 업로드\r\n    setData = async() => {\r\n        const updata=this.state.uploadfile;\r\n        console.log(updata);\r\n\r\n        const uploadData = new FormData();\r\n        for (let i = 0 ; i < updata.length ; i++) {\r\n                uploadData.append(\"files\", updata[i]);\r\n         }\r\n        const responseMultiUpload=await axios.post('../api/imageuploadmulti',uploadData );\r\n\r\n        //사진 업로드후 db입력에서 파일 이동\r\n        const data = this.state.params;\r\n        const response= await axios.post('../api/productsins',data );\r\n        const resposedata= await response.data;\r\n        console.log(resposedata);\r\n\r\n        this.props.getData();\r\n        this.props.history.push(\"/plan/search\");\r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div class=\"daelim_plan_wrapper\">\r\n            <div class=\"daelim_plan_container_left\">\r\n                <div class=\"daelim_ins_wrapper\">\r\n                    <div class=\"daelim_plan_insert_text\">제품 타입</div>\r\n                    <select class=\"daelim_ins_from\" name=\"type\" onChange={this.handleClick}>\r\n                        <option value=\"발전기\">발전기</option>\r\n                        <option value=\"유압\">유압</option>\r\n                        <option value=\"기타\">기타</option>    \r\n                    </select>\r\n                </div>\r\n            \r\n                <div class=\"daelim_ins_wrapper\">\r\n                    <div class=\"daelim_plan_insert_text\">엔진 타입</div>\r\n                    <select class=\"daelim_ins_from\" name=\"type2\" onChange={this.handleClick}>\r\n                        <option value=\"scania\">스카니아</option>\r\n                        <option value=\"commins\">커민스</option>\r\n                        <option value=\"volvo\">볼보</option>\r\n                        <option value=\"caterpillar\">캐터필러</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"daelim_ins_wrapper2\">\r\n                    <div class=\"daelim_plan_insert_text\">모델명</div>\r\n                    <input class=\"daelim_ins_from2\" type=\"text\" name=\"name\" onChange={this.handleClick}/>\r\n                </div>\r\n\r\n                <div class=\"daelim_ins_wrapper2\">\r\n                    <div class=\"daelim_plan_insert_text\">태그</div>\r\n                    <input class=\"daelim_ins_from2\" type=\"text\" name=\"text2\" onChange={this.handleClick}/>\r\n                </div>\r\n\r\n                <div class=\"daelim_ins_wrapper2\">\r\n                <div class=\"daelim_plan_insert_text\">메인 이미지</div>\r\n                {/* <input class=\"daelim_ins_from2\" type=\"text\" name=\"src\" onChange={this.handleClick}/> */}\r\n                <div id=\"daelim_ins_fileupload_wrapper\">\r\n                     <input class=\"daelim_ins_from3\"  type=\"file\" name=\"files\"  onChange={this.handleClickFile}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"daelim_plan_container_right\">\r\n                <div class=\"daelim_plan_insert_text\">내용</div>\r\n                <MyEditor textHandler={this.textHandler} name={this.state.params.name}/>\r\n            </div>\r\n\r\n           \r\n\r\n            <div class=\"daelim_ins_wrapper3\">\r\n                <div id =\"daelim_ins_wrapper3_text\">파일 올리기</div>\r\n                <button id=\"daelim_ins_wrapper3_btn\" onClick={this.addUploadElement}>추가</button>\r\n                <div id=\"daelim_ins_fileupload_wrapper\">\r\n                     <input class=\"daelim_ins_from3\"  type=\"file\" name=\"files\"  onChange={this.handleClickFile}/>\r\n                </div>\r\n            </div>\r\n\r\n           <button onClick={this.setData}> 입력 </button>\r\n        </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default withRouter(DaelimPlanInsert);",["117","118"],"D:\\work\\daelimc\\src\\daelimplan\\daelim_product_dto.js",["119","120","121","122","123"],"import  React from \"react\";\r\nimport pannel from \"../images/pannel.jpeg\"\r\nimport {BrowserRouter as BrowserRouter,Link} from 'react-router-dom';\r\n\r\nclass DaelimProductDTO extends React.Component{\r\n\r\n    constructor(props){\r\n            super(props);\r\n    }\r\n\r\n     \r\n   \r\n\r\n    render(){\r\n        // const data= this.state.data\r\n        const product=this.props.data;\r\n        // const product_one=this.props.data.num;\r\n        const json =JSON.parse(product.download);\r\n        return(\r\n          \r\n            <figure class=\"white\">\r\n                <input type=\"checkbox\" checked={product.checked} value={product.num} onChange={this.props.checkhandler}/>\r\n                <Link to ={{\r\n                    pathname :'/plan/detail/$}',\r\n                    state: {product: product}        \r\n                }}>\r\n                   \r\n                { \r\n                    product.download===null\r\n                    ? <img src= {pannel}/>\r\n                    : <img src= {\"/uploads/\"+product.name+\"/\"+json.data[0]}/>}\r\n               \r\n                    <div id=\"part-info\">{product.name}</div>\r\n                   \r\n                </Link>\r\n            </figure>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DaelimProductDTO;\r\n",["124","125"],"D:\\work\\daelimc\\src\\index.js",[],["126","127"],"D:\\work\\daelimc\\src\\daelimplan\\daelimplandetail.js",[],"D:\\work\\daelimc\\src\\daelimplan\\daelimplansearch.js",["128"],"import React from 'react';\r\nimport './daelimp.css';\r\nimport DaelimProductDTO from './daelim_product_dto';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n\r\nclass DaelimPlanSearch extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        console.log(\"search didmount\");\r\n        console.log(this.props.count);\r\n       \r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        const product = this.props.searchdata;\r\n        \r\n\r\n        return(\r\n            <div>\r\n                {/* 검색 */}\r\n                <div id=\"main_tip_search\"> \r\n                    <form>\r\n                        <input type=\"text\" name=\"search\" id=\"tip_search_input\" list=\"search\" onChange={this.props.searchHandler} />\r\n                    </form>\r\n                    <button id=\"tip_search_btn\" onClick={this.props.getData}> 검색</button>\r\n                </div>\r\n\r\n                <h2>data</h2>\r\n                <section class=\"work\">\r\n                \r\n                {product.map(product =>{\r\n                    var a= <DaelimProductDTO  data={product} checkhandler={this.props.checkhandler}/>\r\n                    return a;\r\n                        })}\r\n                    \r\n                </section>\r\n                <div>\r\n                    <ReactPaginate \r\n                        pageCount={this.props.count/10}\r\n                        pageRangeDisplayed={10}\r\n                        marginPagesDisplayed={0}\r\n                        breakLabel={\"\"}\r\n                        previousLabel={\"이전\"}\r\n                        nextLabel={\"다음\"}\r\n                        onPageChange={this.props.changePage}\r\n                        containerClassName={\"pagination-ul\"}\r\n                        activeClassName={\"currentpage\"}\r\n                        previousClassName={\"pageLabel-btn\"}\r\n                        nextClassName={\"pageLabel-btn\"}\r\n                       />  \r\n                </div>\r\n            </div>\r\n            \r\n         )\r\n    }\r\n}\r\n\r\nexport default DaelimPlanSearch;",["129","130"],"D:\\work\\daelimc\\src\\daelimplan\\daelim_editor.js",["131","132"],"import React, { Component } from 'react';\r\n    import { EditorState, convertToRaw } from 'draft-js';\r\n    import { Editor } from 'react-draft-wysiwyg';\r\n    import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n    import styled from 'styled-components';\r\n    import axios from 'axios';\r\n    \r\n    const MyBlock = styled.div`\r\n    .wrapper-class{\r\n        width: 100%;\r\n        margin-bottom: 4rem;\r\n        border 1px solid #D5D5D5;\r\n        }\r\n    .editor {\r\n      height: 500px !important;\r\n      border: 1px solid #f1f1f1 !important;\r\n      padding: 5px !important;\r\n      border-radius: 2px !important;\r\n    }`;\r\n    class MyEditor extends Component {\r\n    \r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          editorState: EditorState.createEmpty(),\r\n          uploadedImages: []\r\n        };\r\n        this.uploadImageCallBack = this.uploadImageCallBack.bind(this);\r\n      }\r\n    \r\n      onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n          editorState,\r\n        });\r\n\r\n       // the raw state, stringified\r\n      // const rawDraftContentState = JSON.stringify( convertToRaw(this.state.editorState.getCurrentContent()) );\r\n      // // convert the raw state back to a useable ContentState object\r\n      // const contentState = convertFromRaw( JSON.parse( rawDraftContentState) );\r\n      // console.log(contentState);\r\n\r\n      var text = this.state.editorState.getCurrentContent().getBlocksAsArray();\r\n      var finalText;\r\n     text.map((item) => {\r\n     finalText = item.getText() + finalText});\r\n     console.log(finalText)\r\n     // the raw state, stringified\r\n      const rawDraftContentState = convertToRaw(this.state.editorState.getCurrentContent());\r\n     this.props.textHandler(rawDraftContentState);\r\n      };\r\n    \r\n      \r\n\r\n      uploadImageCallBack = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n           const data = new FormData();\r\n          //  const imageObject = {\r\n          //  file: file,\r\n           const localSrc= URL.createObjectURL(file)\r\n          // }\r\n          data.append(\"name\", this.props.name);\r\n          data.append(\"img\",file);\r\n           axios.post('../api/imageupload', data).then(responseImage => {\r\n                resolve({ data: { link: \"/uploads/\"+this.props.name+\"/\"+responseImage.data.filename } });\r\n                console.log(\"upload\");\r\n                console.log(responseImage);\r\n           })\r\n        });\r\n    }\r\n    \r\n      // _uploadImageCallBack(file) {\r\n      //   // long story short, every time we upload an image, we\r\n      //   // need to save it to the state so we can get it's data\r\n      //   // later when we decide what to do with it.\r\n    \r\n      //   // Make sure you have a uploadImages: [] as your default state\r\n      //   let uploadedImages = this.state.uploadedImages;\r\n    \r\n      //   const imageObject = {\r\n      //     file: file,\r\n      //     localSrc: URL.createObjectURL(file),\r\n      //   }\r\n    \r\n      //   uploadedImages.push(imageObject);\r\n    \r\n      //   this.setState({ uploadedImages: uploadedImages })\r\n    \r\n      //   // We need to return a promise with the image src\r\n      //   // the img src we will use here will be what's needed\r\n      //   // to preview it in the browser. This will be different than what\r\n      //   // we will see in the index.md file we generate.\r\n      //   return new Promise(\r\n      //     (resolve, reject) => {\r\n      //       resolve({ data: { link: imageObject.localSrc } });\r\n      //     }\r\n      //   );\r\n      // }\r\n\r\n\r\n\r\n      render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n          <MyBlock>\r\n              <Editor name=\"text1\"\r\n                // 에디터와 툴바 모두에 적용되는 클래스\r\n                wrapperClassName=\"wrapper-class\"\r\n                // 에디터 주변에 적용된 클래스\r\n                editorClassName=\"editor\"\r\n                // 툴바 주위에 적용된 클래스\r\n                toolbarClassName=\"toolbar-class\"\r\n                editorState={editorState}\r\n               \r\n                onEditorStateChange={this.onEditorStateChange}\r\n                toolbar={{\r\n                  inline: { inDropdown: true },\r\n                  list: { inDropdown: true },\r\n                  textAlign: { inDropdown: true },\r\n                  link: { inDropdown: true },\r\n                  history: { inDropdown: true },\r\n                  image: { uploadCallback: this.uploadImageCallBack },\r\n                  inputAccept: 'application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\r\n                }}\r\n              />\r\n          </MyBlock>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default MyEditor;","D:\\work\\daelimc\\src\\daelimplan\\daelimplan.js",["133"],"D:\\work\\daelimc\\src\\daelimplan\\daelim_editor_viewer.js",["134","135"],"import React from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { convertFromRaw, ContentState, EditorState} from 'draft-js'\r\n// import Type from 'typeHelpers'\r\n\r\n// function isDraftable(content) {\r\n    // return Type(content, 'object') && content.hasOwnProperty('entityMap')\r\n// }\r\n\r\nexport default class DraftViewer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // const contentState =   ContentState.createFromBlockArray(convertFromRaw(JSON.parse(this.props.text)));\r\n        // this.state= {editorState :EditorState.createWithContent(contentState)}\r\n        // console.log(this.props.text);\r\n        // console.log(this.state.editorState);\r\n        // this.setState({editorState: EditorState.createWithContent(contentState)});\r\n    }\r\n\r\n    render() {\r\n            let content = this.props.text\r\n            console.log(\"render\")\r\n          \r\n            content = JSON.parse(content)\r\n            console.log(convertFromRaw(content))\r\n            content = EditorState.createWithContent(\r\n                // ContentState.createFromBlockArray(\r\n                    convertFromRaw(content)\r\n                    // )\r\n                    )\r\n\r\n            return <Editor readOnly={true}\r\n                         editorState={content} \r\n                         toolbar={{\r\n                            options:[]\r\n                             }}\r\n                         />\r\n        // }\r\n        // return <p>{content}</p>\r\n    }\r\n\r\n}","D:\\work\\daelimc\\src\\daelim\\daelimcmainpage.js",["136","137"],"D:\\work\\daelimc\\src\\App.js",["138","139"],"D:\\work\\daelimc\\src\\daelim\\daelimMainPage\\menuani.js",["140"],"D:\\work\\daelimc\\src\\daelim\\daelimMainPage\\reactSlider.js",["141","142","143"],"D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\dealimcmenu.js",["144","145","146"],"D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\menuani.js",["147","148"],"D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\menuunderani.js",["149"],"D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\reactSlider.js",["150","151","152","153","154"],"D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\mainbody.js",["155","156"],"D:\\work\\daelimc\\src\\daelim\\daelimabout\\daelimaboutus.js",["157"],"import React from 'react';\r\nimport AboutMenu from './aboutmenu';\r\n\r\n\r\nclass DaelimcAboutUs extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n  }\r\n\r\n \r\n  \r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n         <AboutMenu/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DaelimcAboutUs;","D:\\work\\daelimc\\src\\daelim\\daelimcontact\\daelimcontactus.js",["158","159"],"D:\\work\\daelimc\\src\\daelim\\daelimcontact\\contactform.js",["160"],"D:\\work\\daelimc\\src\\daelim\\daelimabout\\aboutmenu.js",["161","162","163"],"D:\\work\\daelimc\\src\\daelim\\daelimabout\\kakaomap.js",["164"],"D:\\work\\daelimc\\src\\daelim\\daelimmainpage\\footer.js",["165","166"],"D:\\work\\daelimc\\src\\daelim\\daelimproduct\\product.js",["167"],"D:\\work\\daelimc\\src\\daelim\\daelimproduct\\productsearch.js",[],"D:\\work\\daelimc\\src\\daelim\\daelimproduct\\productdto.js",["168","169","170","171","172"],{"ruleId":"173","severity":1,"message":"174","line":90,"column":15,"nodeType":"175","messageId":"176","endLine":90,"endColumn":34},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":39,"fix":"185"},{"ruleId":"173","severity":1,"message":"186","line":3,"column":26,"nodeType":"175","messageId":"176","endLine":3,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":7,"column":5,"nodeType":"189","messageId":"190","endLine":9,"endColumn":6},{"ruleId":"191","severity":1,"message":"192","line":30,"column":23,"nodeType":"193","endLine":30,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":31,"column":23,"nodeType":"193","endLine":31,"endColumn":78},{"ruleId":"177","replacedBy":"194"},{"ruleId":"179","replacedBy":"195"},{"ruleId":"177","replacedBy":"196"},{"ruleId":"179","replacedBy":"197"},{"ruleId":"187","severity":1,"message":"188","line":9,"column":5,"nodeType":"189","messageId":"190","endLine":11,"endColumn":6},{"ruleId":"177","replacedBy":"198"},{"ruleId":"179","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":44,"column":22,"nodeType":"202","messageId":"203","endLine":44,"endColumn":24},{"ruleId":"173","severity":1,"message":"204","line":59,"column":18,"nodeType":"175","messageId":"176","endLine":59,"endColumn":26},{"ruleId":"173","severity":1,"message":"205","line":106,"column":15,"nodeType":"175","messageId":"176","endLine":106,"endColumn":26},{"ruleId":"173","severity":1,"message":"206","line":3,"column":26,"nodeType":"175","messageId":"176","endLine":3,"endColumn":38},{"ruleId":"187","severity":1,"message":"188","line":12,"column":5,"nodeType":"189","messageId":"190","endLine":19,"endColumn":6},{"ruleId":"173","severity":1,"message":"207","line":3,"column":18,"nodeType":"175","messageId":"176","endLine":3,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":27,"column":3,"nodeType":"189","messageId":"190","endLine":30,"endColumn":4},{"ruleId":"173","severity":1,"message":"208","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":15},{"ruleId":"173","severity":1,"message":"209","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":18},{"ruleId":"173","severity":1,"message":"207","line":2,"column":18,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"191","severity":1,"message":"192","line":46,"column":16,"nodeType":"193","endLine":46,"endColumn":44},{"ruleId":"191","severity":1,"message":"192","line":49,"column":17,"nodeType":"193","endLine":49,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":52,"column":17,"nodeType":"193","endLine":52,"endColumn":45},{"ruleId":"173","severity":1,"message":"210","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":40,"fix":"211"},{"ruleId":"173","severity":1,"message":"186","line":5,"column":27,"nodeType":"175","messageId":"176","endLine":5,"endColumn":40},{"ruleId":"173","severity":1,"message":"212","line":1,"column":19,"nodeType":"175","messageId":"176","endLine":1,"endColumn":27},{"ruleId":"173","severity":1,"message":"207","line":3,"column":18,"nodeType":"175","messageId":"176","endLine":3,"endColumn":21},{"ruleId":"173","severity":1,"message":"207","line":2,"column":18,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"173","severity":1,"message":"213","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":25},{"ruleId":"173","severity":1,"message":"214","line":18,"column":12,"nodeType":"175","messageId":"176","endLine":18,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":45,"column":16,"nodeType":"193","endLine":45,"endColumn":42},{"ruleId":"191","severity":1,"message":"192","line":48,"column":17,"nodeType":"193","endLine":48,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":51,"column":17,"nodeType":"193","endLine":51,"endColumn":43},{"ruleId":"173","severity":1,"message":"207","line":2,"column":18,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":16,"column":5,"nodeType":"189","messageId":"190","endLine":19,"endColumn":6},{"ruleId":"187","severity":1,"message":"188","line":7,"column":3,"nodeType":"189","messageId":"190","endLine":10,"endColumn":4},{"ruleId":"173","severity":1,"message":"207","line":3,"column":18,"nodeType":"175","messageId":"176","endLine":3,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":27,"column":3,"nodeType":"189","messageId":"190","endLine":30,"endColumn":4},{"ruleId":"173","severity":1,"message":"207","line":5,"column":18,"nodeType":"175","messageId":"176","endLine":5,"endColumn":21},{"ruleId":"173","severity":1,"message":"215","line":3,"column":16,"nodeType":"175","messageId":"176","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"216","line":3,"column":28,"nodeType":"175","messageId":"176","endLine":3,"endColumn":35},{"ruleId":"173","severity":1,"message":"217","line":3,"column":70,"nodeType":"175","messageId":"176","endLine":3,"endColumn":79},{"ruleId":"173","severity":1,"message":"218","line":23,"column":17,"nodeType":"175","messageId":"176","endLine":23,"endColumn":20},{"ruleId":"173","severity":1,"message":"207","line":2,"column":18,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":93,"column":3,"nodeType":"189","messageId":"190","endLine":96,"endColumn":4},{"ruleId":"187","severity":1,"message":"188","line":8,"column":3,"nodeType":"189","messageId":"190","endLine":11,"endColumn":4},{"ruleId":"181","severity":1,"message":"182","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":39,"fix":"219"},{"ruleId":"173","severity":1,"message":"186","line":3,"column":26,"nodeType":"175","messageId":"176","endLine":3,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":7,"column":5,"nodeType":"189","messageId":"190","endLine":9,"endColumn":6},{"ruleId":"191","severity":1,"message":"192","line":30,"column":23,"nodeType":"193","endLine":30,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":31,"column":23,"nodeType":"193","endLine":31,"endColumn":78},"no-unused-vars","'responseMultiUpload' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-useless-rename","Import BrowserRouter unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"222","text":"223"},"'BrowserRouter' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["220"],["221"],["220"],["221"],["220"],["221"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'localSrc' is assigned a value but never used.","'responsedel' is assigned a value but never used.","'ContentState' is defined but never used.","'css' is defined but never used.","'Route' is defined but never used.","'DaelimPlan' is defined but never used.","'MenuAnimation' is defined but never used.",{"range":"224","text":"223"},"'useState' is defined but never used.","'SampleNextArrow' is defined but never used.","'SamplePrevArrow' is defined but never used.","'DirectLink' is defined but never used.","'Element' is defined but never used.","'scrollSpy' is defined but never used.","'map' is assigned a value but never used.",{"range":"225","text":"223"},"no-global-assign","no-unsafe-negation",[81,111],"BrowserRouter",[166,196],[84,114]]