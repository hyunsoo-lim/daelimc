[{"D:\\work\\daelimc\\src\\daelimplan\\daelimplaninsert.js":"1","D:\\work\\daelimc\\src\\daelimplan\\daelim_product_dto.js":"2","D:\\work\\daelimc\\src\\index.js":"3","D:\\work\\daelimc\\src\\daelim\\page\\page_home.js":"4","D:\\work\\daelimc\\src\\daelim\\page\\page_conus.js":"5","D:\\work\\daelimc\\src\\daelim\\page\\page_content.js":"6","D:\\work\\daelimc\\src\\dbcontrol\\dbcInsert.js":"7","D:\\work\\daelimc\\src\\dbcontrol\\daelim_product_dto.js":"8","D:\\work\\daelimc\\src\\dbcontrol\\dbcSelect.js":"9","D:\\work\\daelimc\\src\\daelimplan\\daelimplandetail.js":"10","D:\\work\\daelimc\\src\\daelim\\DaelimNav.js":"11","D:\\work\\daelimc\\src\\daelimplan\\daelimplansearch.js":"12","D:\\work\\daelimc\\src\\daelimplan\\daelim_editor.js":"13","D:\\work\\daelimc\\src\\daelimplan\\daelimplan.js":"14","D:\\work\\daelimc\\src\\daelimplan\\daelim_editor_viewer.js":"15","D:\\work\\daelimc\\src\\daelim\\daelimcmainpage.js":"16","D:\\work\\daelimc\\src\\dbcontrol\\daelim_editor.js":"17","D:\\work\\daelimc\\src\\daelim\\DaelimMain.js":"18","D:\\work\\daelimc\\src\\App.js":"19","D:\\work\\daelimc\\src\\daelim\\menuani.js":"20"},{"size":6308,"mtime":1616374338784,"results":"21","hashOfConfig":"22"},{"size":1230,"mtime":1616397718266,"results":"23","hashOfConfig":"22"},{"size":517,"mtime":1614910745365,"results":"24","hashOfConfig":"22"},{"size":160,"mtime":1614910745334,"results":"25","hashOfConfig":"22"},{"size":176,"mtime":1614910745334,"results":"26","hashOfConfig":"22"},{"size":714,"mtime":1614910745334,"results":"27","hashOfConfig":"22"},{"size":1300,"mtime":1614910745340,"results":"28","hashOfConfig":"22"},{"size":783,"mtime":1614910745340,"results":"29","hashOfConfig":"22"},{"size":4326,"mtime":1614910745341,"results":"30","hashOfConfig":"22"},{"size":1580,"mtime":1614910745337,"results":"31","hashOfConfig":"22"},{"size":1266,"mtime":1614910745333,"results":"32","hashOfConfig":"22"},{"size":2044,"mtime":1615970735261,"results":"33","hashOfConfig":"22"},{"size":4779,"mtime":1616396828552,"results":"34","hashOfConfig":"22"},{"size":7001,"mtime":1616397705840,"results":"35","hashOfConfig":"22"},{"size":1493,"mtime":1614910745335,"results":"36","hashOfConfig":"22"},{"size":5732,"mtime":1616831102046,"results":"37","hashOfConfig":"22"},{"size":3700,"mtime":1614910745339,"results":"38","hashOfConfig":"22"},{"size":3953,"mtime":1614910745333,"results":"39","hashOfConfig":"22"},{"size":878,"mtime":1616487323525,"results":"40","hashOfConfig":"22"},{"size":738,"mtime":1616831695638,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1sgkib2",{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work\\daelimc\\src\\daelimplan\\daelimplaninsert.js",["92"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport './daelimp.css';\r\nimport MyEditor from './daelim_editor';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass DaelimPlanInsert extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= { params  : {download: null}, uploadfile:[]}\r\n        this.handleClick=this.handleClick.bind(this)\r\n        this.handleClickFile=this.handleClickFile.bind(this)\r\n        this.addUploadElement=this.addUploadElement.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleClick=(e)=>{\r\n        const nextState=this.state.params;\r\n        nextState[e.target.name]=e.target.value;\r\n        this.setState({params:nextState});\r\n        console.log(nextState)\r\n        console.log(this.state.params.type);\r\n\r\n    }\r\n\r\n    handleClickFile =(e)=>{\r\n        let nextUploadFile= this.state.uploadfile;\r\n        const targetfile=e.target.files[0];\r\n        console.log(targetfile.name);\r\n\r\n        // const params_src={};\r\n        const nextState=this.state.params;\r\n     \r\n       \r\n\r\n        if(nextState.download != null){\r\n            let jsonparse=JSON.parse(nextState.download);\r\n            jsonparse.data.push(targetfile.name);\r\n            let jsonstr=JSON.stringify(jsonparse);\r\n            nextState[\"download\"]=jsonstr;\r\n            console.log(\"params_src11\");\r\n            console.log(nextState);\r\n        }else{\r\n            let jsonstr=JSON.stringify({data:[targetfile.name]});\r\n            nextState[\"download\"]=jsonstr;\r\n            console.log(\"params_src22\");\r\n            console.log(nextState);\r\n        }\r\n        \r\n        this.setState({params:nextState});\r\n       \r\n        nextUploadFile.push(e.target.files[0]);\r\n        console.log(nextUploadFile);\r\n        this.setState({uploadfile: nextUploadFile});\r\n    }\r\n\r\n\r\n    //에디터의 내용 통채로 가져와서 setstate \r\n    textHandler=(value)=>{\r\n        let nextState=this.state.params;\r\n        nextState[\"text1\"]=JSON.stringify(value);\r\n        this.setState({params:nextState});\r\n        console.log(this.state.params.text1);\r\n    }\r\n\r\n\r\n    //다운로드 파일 업로드시 추가로 넣을 input 생성하는 function\r\n    addUploadElement=()=>{\r\n        const newDIV = document.createElement(\"input\");\r\n        newDIV.setAttribute(\"class\",\"daelim_ins_from3\");\r\n        newDIV.setAttribute(\"type\",\"file\");\r\n        newDIV.setAttribute(\"name\",\"src\");\r\n        newDIV.onchange=this.handleClickFile;\r\n        document.getElementById(\"daelim_ins_fileupload_wrapper\").appendChild(newDIV);\r\n    }\r\n\r\n\r\n\r\n    //db 입력 파일 업로드\r\n    setData = async() => {\r\n        const updata=this.state.uploadfile;\r\n        console.log(updata);\r\n\r\n        const uploadData = new FormData();\r\n        for (let i = 0 ; i < updata.length ; i++) {\r\n                uploadData.append(\"files\", updata[i]);\r\n         }\r\n        const responseMultiUpload=await axios.post('../api/imageuploadmulti',uploadData );\r\n\r\n        //사진 업로드후 db입력에서 파일 이동\r\n        const data = this.state.params;\r\n        const response= await axios.post('../api/productsins',data );\r\n        const resposedata= await response.data;\r\n        console.log(resposedata);\r\n\r\n        this.props.getData();\r\n        this.props.history.push(\"/plan/search\");\r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div class=\"daelim_plan_wrapper\">\r\n            <div class=\"daelim_plan_container_left\">\r\n                <div class=\"daelim_ins_wrapper\">\r\n                    <div class=\"daelim_plan_insert_text\">제품 타입</div>\r\n                    <select class=\"daelim_ins_from\" name=\"type\" onChange={this.handleClick}>\r\n                        <option value=\"발전기\">발전기</option>\r\n                        <option value=\"유압\">유압</option>\r\n                        <option value=\"기타\">기타</option>    \r\n                    </select>\r\n                </div>\r\n            \r\n                <div class=\"daelim_ins_wrapper\">\r\n                    <div class=\"daelim_plan_insert_text\">엔진 타입</div>\r\n                    <select class=\"daelim_ins_from\" name=\"type2\" onChange={this.handleClick}>\r\n                        <option value=\"scania\">스카니아</option>\r\n                        <option value=\"commins\">커민스</option>\r\n                        <option value=\"volvo\">볼보</option>\r\n                        <option value=\"caterpillar\">캐터필러</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"daelim_ins_wrapper2\">\r\n                    <div class=\"daelim_plan_insert_text\">모델명</div>\r\n                    <input class=\"daelim_ins_from2\" type=\"text\" name=\"name\" onChange={this.handleClick}/>\r\n                </div>\r\n\r\n                <div class=\"daelim_ins_wrapper2\">\r\n                    <div class=\"daelim_plan_insert_text\">태그</div>\r\n                    <input class=\"daelim_ins_from2\" type=\"text\" name=\"text2\" onChange={this.handleClick}/>\r\n                </div>\r\n\r\n                <div class=\"daelim_ins_wrapper2\">\r\n                <div class=\"daelim_plan_insert_text\">메인 이미지</div>\r\n                {/* <input class=\"daelim_ins_from2\" type=\"text\" name=\"src\" onChange={this.handleClick}/> */}\r\n                <div id=\"daelim_ins_fileupload_wrapper\">\r\n                     <input class=\"daelim_ins_from3\"  type=\"file\" name=\"files\"  onChange={this.handleClickFile}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"daelim_plan_container_right\">\r\n                <div class=\"daelim_plan_insert_text\">내용</div>\r\n                <MyEditor textHandler={this.textHandler} name={this.state.params.name}/>\r\n            </div>\r\n\r\n           \r\n\r\n            <div class=\"daelim_ins_wrapper3\">\r\n                <div id =\"daelim_ins_wrapper3_text\">파일 올리기</div>\r\n                <button id=\"daelim_ins_wrapper3_btn\" onClick={this.addUploadElement}>추가</button>\r\n                <div id=\"daelim_ins_fileupload_wrapper\">\r\n                     <input class=\"daelim_ins_from3\"  type=\"file\" name=\"files\"  onChange={this.handleClickFile}/>\r\n                </div>\r\n            </div>\r\n\r\n           <button onClick={this.setData}> 입력 </button>\r\n        </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default withRouter(DaelimPlanInsert);",["93","94"],"D:\\work\\daelimc\\src\\daelimplan\\daelim_product_dto.js",["95","96","97","98","99"],"import  React from \"react\";\r\nimport pannel from \"../images/pannel.jpeg\"\r\nimport {BrowserRouter as BrowserRouter,Link} from 'react-router-dom';\r\n\r\nclass DaelimProductDTO extends React.Component{\r\n\r\n    constructor(props){\r\n            super(props);\r\n    }\r\n\r\n     \r\n   \r\n\r\n    render(){\r\n        // const data= this.state.data\r\n        const product=this.props.data;\r\n        // const product_one=this.props.data.num;\r\n        const json =JSON.parse(product.download);\r\n        return(\r\n          \r\n            <figure class=\"white\">\r\n                <input type=\"checkbox\" checked={product.checked} value={product.num} onChange={this.props.checkhandler}/>\r\n                <Link to ={{\r\n                    pathname :'/plan/detail/$}',\r\n                    state: {product: product}        \r\n                }}>\r\n                   \r\n                { \r\n                    product.download===null\r\n                    ? <img src= {pannel}/>\r\n                    : <img src= {\"/uploads/\"+product.name+\"/\"+json.data[0]}/>}\r\n               \r\n                    <div id=\"part-info\">{product.name}</div>\r\n                   \r\n                </Link>\r\n            </figure>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DaelimProductDTO;\r\n",["100","101"],"D:\\work\\daelimc\\src\\index.js",[],"D:\\work\\daelimc\\src\\daelim\\page\\page_home.js",[],"D:\\work\\daelimc\\src\\daelim\\page\\page_conus.js",[],"D:\\work\\daelimc\\src\\daelim\\page\\page_content.js",[],"D:\\work\\daelimc\\src\\dbcontrol\\dbcInsert.js",["102"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass DbcSelect extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= { params  : {}}\r\n        this.handleClick=this.handleClick.bind(this)\r\n    }\r\n\r\n\r\n    \r\n    handleClick=(e)=>{\r\n        const nextState=this.state.params;\r\n        nextState[e.target.name]=e.target.value;\r\n        this.setState({params:nextState});\r\n        console.log(nextState)\r\n        console.log(this.state.params.type);\r\n\r\n    }\r\n\r\n\r\n    setData = async() => {\r\n        const data = this.state.params;\r\n        const response=axios.post('api/productsins',data );\r\n        this.props.getData()\r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n           <input type=\"text\" name=\"type\" onChange={this.handleClick}/>\r\n           <input type=\"text\" name=\"type2\" onChange={this.handleClick}/>\r\n           <input type=\"text\" name=\"name\" onChange={this.handleClick}/>\r\n           <input type=\"text\" name=\"text1\" onChange={this.handleClick}/>\r\n           <input type=\"text\" name=\"text2\" onChange={this.handleClick}/>\r\n           <input type=\"text\" name=\"src\" onChange={this.handleClick}/>\r\n           <button onClick={this.setData}> 입력 </button>\r\n        </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default DbcSelect;","D:\\work\\daelimc\\src\\dbcontrol\\daelim_product_dto.js",[],"D:\\work\\daelimc\\src\\dbcontrol\\dbcSelect.js",["103","104"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport DbcInsert from './dbcInsert';\r\nimport DaelimProductDTO from './daelim_product_dto';\r\nimport DaelimEditor from './daelim_editor';\r\nimport MyEditor from './daelim_editor';\r\n\r\n\r\n\r\nclass DbcSelect extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {product:[],checkedNum:[]}\r\n        this.checkedItemHandler=this.checkedItemHandler.bind(this);\r\n        this.getData = this.getData.bind(this)\r\n        this.deleteData = this.deleteData.bind(this)\r\n        this.checkAllOff=this.checkAllOff.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        console.log(\"didmount\");\r\n        this.getData();\r\n    }\r\n\r\n\r\n    \r\n\r\n    checkedItemHandler = (e)=>{\r\n        let nextState=this.state.product;\r\n        console.log( \"nextState\");\r\n        console.log(Number(e.target.value))\r\n        if(e.target.checked){\r\n             nextState[Number(e.target.value)].checked=true;\r\n            // nextState.push(Number(e.target.value));\r\n        }else if(!e.target.checked){\r\n            // nextState.splice(nextState.indexOf(Number(e.target.value)),1);\r\n            nextState[Number(e.target.value)].checked=false;\r\n        }\r\n        this.setState({product: nextState})\r\n\r\n    }\r\n\r\n    checkAllOff(){\r\n       this.getData();\r\n    }\r\n\r\n\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     // 전형적인 사용 사례 (props 비교를 잊지 마세요)\r\n    //     if (this.props.userID !== prevProps.userID) {\r\n    //       this.fetchData(this.props.userID);\r\n    //     }\r\n    //   }\r\n\r\n    getData (){\r\n\r\n        setTimeout(async() => {\r\n            const response = await axios.get('api/products');\r\n            console.log(\"111111111\");\r\n            console.log(response.data.products.length)\r\n            \r\n            // response.data.products.map\r\n            for(let i=0; i<response.data.products.length; i++){\r\n                response.data.products[i].checked = false;\r\n                response.data.products[i].num = i;\r\n                // checkdata+=({no:response.data.products[i].no,checked:\"off\"});\r\n            }\r\n            console.log(\"checkdata\");\r\n            this.setState({product:response.data.products});\r\n            // const logdata= this.state.product;\r\n            // console.log(logdata)\r\n        }, 100);\r\n      }\r\n\r\n      componentDidUpdate(){\r\n          console.log(\"update\")\r\n          console.log(this.state.product);      \r\n      }\r\n  \r\n     deleteData = async() => {\r\n            \r\n            let checkData = [];\r\n            for(let i=0; i<this.state.product.length; i++){\r\n                if(this.state.product[i].checked){\r\n                    checkData.push(this.state.product[i].no)\r\n                }\r\n            }\r\n            const responsedel= await axios.post('api/productsdel',checkData)\r\n            console.log(\"delllll\");\r\n            console.log(checkData);\r\n            // this.setState({checkedNum:[]})\r\n            this.getData();\r\n    }\r\n    \r\n\r\n    render(){\r\n        console.log(\"render\");\r\n        console.log(this.state.product)\r\n        let {product} = this.state;\r\n\r\n        \r\n\r\n        return(\r\n        <div>\r\n             <DbcInsert getData={this.getData}/>\r\n             <MyEditor/>\r\n            <h2>data</h2>\r\n            <table>\r\n                <tr>\r\n                    <td>num</td>\r\n                    <td>no</td>\r\n                    <td>타입</td>\r\n                    <td>타입2</td>\r\n                    <td>이름</td>\r\n                    <td>text1</td>\r\n                    <td>text2</td>\r\n                    <td>src</td>\r\n                    <td><button onClick={this.deleteData}>삭제</button></td>\r\n                    <td><button onClick={this.checkAllOff}>해제</button></td>\r\n                </tr>\r\n               \r\n               {product.map(product =>{\r\n                 var a= <DaelimProductDTO  num={product.num} no={product.no} type1={product.type} type2={product.type2} name={product.name} text1={product.text1} text2={product.text2} \r\n                                           src={product.imgsrc} checked={product.checked} handler={this.checkedItemHandler}/>\r\n                return a;\r\n                     })}\r\n                \r\n            </table>\r\n            \r\n        </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default DbcSelect;","D:\\work\\daelimc\\src\\daelimplan\\daelimplandetail.js",[],"D:\\work\\daelimc\\src\\daelim\\DaelimNav.js",["105","106"],"import React from 'react';\r\nimport {BrowserRouter as BrowserRouter,Link} from 'react-router-dom';\r\n\r\nclass DaelimNav extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            liNumber : 0\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(linum) {\r\n        this.setState({liNumber : linum});\r\n        setTimeout(() => {\r\n            //css의 적용이 느려 timeout을 준다\r\n            document.getElementsByTagName(\"li\").item(0).className=\"aa\";\r\n            document.getElementsByTagName(\"li\").item(1).className=\"aa\";\r\n            document.getElementsByTagName(\"li\").item(2).className=\"aa\";\r\n            document.getElementsByTagName(\"li\").item(this.state.liNumber).className=\"active\";\r\n        }, 100);\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <div id=\"menu\"> \r\n             <ul>\r\n                <li class=\"active\"><Link to=\"/\" onClick={()=>this.handleClick(0)}>Home</Link></li>\r\n                 <li><Link to=\"/content\" onClick={()=>this.handleClick(1)}>Content</Link></li>\r\n                <li><Link to=\"/conus\" onClick={()=>this.handleClick(2)}>Contect Us</Link></li>\r\n             </ul>\r\n      </div>\r\n      )\r\n    }\r\n}\r\n  export default DaelimNav;\r\n","D:\\work\\daelimc\\src\\daelimplan\\daelimplansearch.js",["107"],"import React from 'react';\r\nimport './daelimp.css';\r\nimport DaelimProductDTO from './daelim_product_dto';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n\r\nclass DaelimPlanSearch extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        console.log(\"search didmount\");\r\n        console.log(this.props.count);\r\n       \r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        const product = this.props.searchdata;\r\n        \r\n\r\n        return(\r\n            <div>\r\n                {/* 검색 */}\r\n                <div id=\"main_tip_search\"> \r\n                    <form>\r\n                        <input type=\"text\" name=\"search\" id=\"tip_search_input\" list=\"search\" onChange={this.props.searchHandler} />\r\n                    </form>\r\n                    <button id=\"tip_search_btn\" onClick={this.props.getData}> 검색</button>\r\n                </div>\r\n\r\n                <h2>data</h2>\r\n                <section class=\"work\">\r\n                \r\n                {product.map(product =>{\r\n                    var a= <DaelimProductDTO  data={product} checkhandler={this.props.checkhandler}/>\r\n                    return a;\r\n                        })}\r\n                    \r\n                </section>\r\n                <div>\r\n                    <ReactPaginate \r\n                        pageCount={this.props.count/10}\r\n                        pageRangeDisplayed={10}\r\n                        marginPagesDisplayed={0}\r\n                        breakLabel={\"\"}\r\n                        previousLabel={\"이전\"}\r\n                        nextLabel={\"다음\"}\r\n                        onPageChange={this.props.changePage}\r\n                        containerClassName={\"pagination-ul\"}\r\n                        activeClassName={\"currentpage\"}\r\n                        previousClassName={\"pageLabel-btn\"}\r\n                        nextClassName={\"pageLabel-btn\"}\r\n                       />  \r\n                </div>\r\n            </div>\r\n            \r\n         )\r\n    }\r\n}\r\n\r\nexport default DaelimPlanSearch;","D:\\work\\daelimc\\src\\daelimplan\\daelim_editor.js",["108","109"],"import React, { Component } from 'react';\r\n    import { EditorState, convertToRaw } from 'draft-js';\r\n    import { Editor } from 'react-draft-wysiwyg';\r\n    import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n    import styled from 'styled-components';\r\n    import axios from 'axios';\r\n    \r\n    const MyBlock = styled.div`\r\n    .wrapper-class{\r\n        width: 100%;\r\n        margin-bottom: 4rem;\r\n        border 1px solid #D5D5D5;\r\n        }\r\n    .editor {\r\n      height: 500px !important;\r\n      border: 1px solid #f1f1f1 !important;\r\n      padding: 5px !important;\r\n      border-radius: 2px !important;\r\n    }`;\r\n    class MyEditor extends Component {\r\n    \r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          editorState: EditorState.createEmpty(),\r\n          uploadedImages: []\r\n        };\r\n        this.uploadImageCallBack = this.uploadImageCallBack.bind(this);\r\n      }\r\n    \r\n      onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n          editorState,\r\n        });\r\n\r\n       // the raw state, stringified\r\n      // const rawDraftContentState = JSON.stringify( convertToRaw(this.state.editorState.getCurrentContent()) );\r\n      // // convert the raw state back to a useable ContentState object\r\n      // const contentState = convertFromRaw( JSON.parse( rawDraftContentState) );\r\n      // console.log(contentState);\r\n\r\n      var text = this.state.editorState.getCurrentContent().getBlocksAsArray();\r\n      var finalText;\r\n     text.map((item) => {\r\n     finalText = item.getText() + finalText});\r\n     console.log(finalText)\r\n     // the raw state, stringified\r\n      const rawDraftContentState = convertToRaw(this.state.editorState.getCurrentContent());\r\n     this.props.textHandler(rawDraftContentState);\r\n      };\r\n    \r\n      \r\n\r\n      uploadImageCallBack = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n           const data = new FormData();\r\n          //  const imageObject = {\r\n          //  file: file,\r\n           const localSrc= URL.createObjectURL(file)\r\n          // }\r\n          data.append(\"name\", this.props.name);\r\n          data.append(\"img\",file);\r\n           axios.post('../api/imageupload', data).then(responseImage => {\r\n                resolve({ data: { link: \"/uploads/\"+this.props.name+\"/\"+responseImage.data.filename } });\r\n                console.log(\"upload\");\r\n                console.log(responseImage);\r\n           })\r\n        });\r\n    }\r\n    \r\n      // _uploadImageCallBack(file) {\r\n      //   // long story short, every time we upload an image, we\r\n      //   // need to save it to the state so we can get it's data\r\n      //   // later when we decide what to do with it.\r\n    \r\n      //   // Make sure you have a uploadImages: [] as your default state\r\n      //   let uploadedImages = this.state.uploadedImages;\r\n    \r\n      //   const imageObject = {\r\n      //     file: file,\r\n      //     localSrc: URL.createObjectURL(file),\r\n      //   }\r\n    \r\n      //   uploadedImages.push(imageObject);\r\n    \r\n      //   this.setState({ uploadedImages: uploadedImages })\r\n    \r\n      //   // We need to return a promise with the image src\r\n      //   // the img src we will use here will be what's needed\r\n      //   // to preview it in the browser. This will be different than what\r\n      //   // we will see in the index.md file we generate.\r\n      //   return new Promise(\r\n      //     (resolve, reject) => {\r\n      //       resolve({ data: { link: imageObject.localSrc } });\r\n      //     }\r\n      //   );\r\n      // }\r\n\r\n\r\n\r\n      render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n          <MyBlock>\r\n              <Editor name=\"text1\"\r\n                // 에디터와 툴바 모두에 적용되는 클래스\r\n                wrapperClassName=\"wrapper-class\"\r\n                // 에디터 주변에 적용된 클래스\r\n                editorClassName=\"editor\"\r\n                // 툴바 주위에 적용된 클래스\r\n                toolbarClassName=\"toolbar-class\"\r\n                editorState={editorState}\r\n               \r\n                onEditorStateChange={this.onEditorStateChange}\r\n                toolbar={{\r\n                  inline: { inDropdown: true },\r\n                  list: { inDropdown: true },\r\n                  textAlign: { inDropdown: true },\r\n                  link: { inDropdown: true },\r\n                  history: { inDropdown: true },\r\n                  image: { uploadCallback: this.uploadImageCallBack },\r\n                  inputAccept: 'application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\r\n                }}\r\n              />\r\n          </MyBlock>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default MyEditor;","D:\\work\\daelimc\\src\\daelimplan\\daelimplan.js",["110"],"D:\\work\\daelimc\\src\\daelimplan\\daelim_editor_viewer.js",["111","112"],"import React from 'react'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { convertFromRaw, ContentState, EditorState} from 'draft-js'\r\n// import Type from 'typeHelpers'\r\n\r\n// function isDraftable(content) {\r\n    // return Type(content, 'object') && content.hasOwnProperty('entityMap')\r\n// }\r\n\r\nexport default class DraftViewer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // const contentState =   ContentState.createFromBlockArray(convertFromRaw(JSON.parse(this.props.text)));\r\n        // this.state= {editorState :EditorState.createWithContent(contentState)}\r\n        // console.log(this.props.text);\r\n        // console.log(this.state.editorState);\r\n        // this.setState({editorState: EditorState.createWithContent(contentState)});\r\n    }\r\n\r\n    render() {\r\n            let content = this.props.text\r\n            console.log(\"render\")\r\n          \r\n            content = JSON.parse(content)\r\n            console.log(convertFromRaw(content))\r\n            content = EditorState.createWithContent(\r\n                // ContentState.createFromBlockArray(\r\n                    convertFromRaw(content)\r\n                    // )\r\n                    )\r\n\r\n            return <Editor readOnly={true}\r\n                         editorState={content} \r\n                         toolbar={{\r\n                            options:[]\r\n                             }}\r\n                         />\r\n        // }\r\n        // return <p>{content}</p>\r\n    }\r\n\r\n}","D:\\work\\daelimc\\src\\daelim\\daelimcmainpage.js",["113","114","115"],"D:\\work\\daelimc\\src\\dbcontrol\\daelim_editor.js",[],"D:\\work\\daelimc\\src\\daelim\\DaelimMain.js",["116","117","118","119","120","121","122","123"],"D:\\work\\daelimc\\src\\App.js",["124","125","126"],"D:\\work\\daelimc\\src\\daelim\\menuani.js",["127"],{"ruleId":"128","severity":1,"message":"129","line":90,"column":15,"nodeType":"130","messageId":"131","endLine":90,"endColumn":34},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":39,"fix":"140"},{"ruleId":"128","severity":1,"message":"141","line":3,"column":26,"nodeType":"130","messageId":"131","endLine":3,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":7,"column":5,"nodeType":"144","messageId":"145","endLine":9,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":30,"column":23,"nodeType":"148","endLine":30,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":31,"column":23,"nodeType":"148","endLine":31,"endColumn":78},{"ruleId":"132","replacedBy":"149"},{"ruleId":"134","replacedBy":"150"},{"ruleId":"128","severity":1,"message":"151","line":28,"column":15,"nodeType":"130","messageId":"131","endLine":28,"endColumn":23},{"ruleId":"128","severity":1,"message":"152","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":20},{"ruleId":"128","severity":1,"message":"153","line":92,"column":19,"nodeType":"130","messageId":"131","endLine":92,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":39,"fix":"154"},{"ruleId":"128","severity":1,"message":"141","line":2,"column":26,"nodeType":"130","messageId":"131","endLine":2,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":9,"column":5,"nodeType":"144","messageId":"145","endLine":11,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":44,"column":22,"nodeType":"157","messageId":"158","endLine":44,"endColumn":24},{"ruleId":"128","severity":1,"message":"159","line":59,"column":18,"nodeType":"130","messageId":"131","endLine":59,"endColumn":26},{"ruleId":"128","severity":1,"message":"153","line":106,"column":15,"nodeType":"130","messageId":"131","endLine":106,"endColumn":26},{"ruleId":"128","severity":1,"message":"160","line":3,"column":26,"nodeType":"130","messageId":"131","endLine":3,"endColumn":38},{"ruleId":"142","severity":1,"message":"143","line":12,"column":5,"nodeType":"144","messageId":"145","endLine":19,"endColumn":6},{"ruleId":"128","severity":1,"message":"161","line":2,"column":18,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},{"ruleId":"128","severity":1,"message":"162","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"163","line":3,"column":20,"nodeType":"130","messageId":"131","endLine":3,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":37,"column":36,"nodeType":"148","endLine":37,"endColumn":48},{"ruleId":"164","severity":1,"message":"165","line":39,"column":23,"nodeType":"148","endLine":39,"endColumn":35},{"ruleId":"164","severity":1,"message":"165","line":42,"column":38,"nodeType":"148","endLine":42,"endColumn":50},{"ruleId":"164","severity":1,"message":"165","line":44,"column":25,"nodeType":"148","endLine":44,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":47,"column":38,"nodeType":"148","endLine":47,"endColumn":50},{"ruleId":"164","severity":1,"message":"165","line":49,"column":25,"nodeType":"148","endLine":49,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":56,"column":20,"nodeType":"148","endLine":56,"endColumn":53},{"ruleId":"164","severity":1,"message":"165","line":63,"column":79,"nodeType":"148","endLine":63,"endColumn":91},{"ruleId":"136","severity":1,"message":"137","line":4,"column":9,"nodeType":"138","messageId":"139","endLine":4,"endColumn":39,"fix":"166"},{"ruleId":"128","severity":1,"message":"167","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"168","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":14},{"ruleId":"128","severity":1,"message":"161","line":2,"column":18,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},"no-unused-vars","'responseMultiUpload' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-useless-rename","Import BrowserRouter unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"171","text":"172"},"'BrowserRouter' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["169"],["170"],"'response' is assigned a value but never used.","'DaelimEditor' is defined but never used.","'responsedel' is assigned a value but never used.",{"range":"173","text":"172"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'localSrc' is assigned a value but never used.","'ContentState' is defined but never used.","'css' is defined but never used.","'useSpring' is defined but never used.","'animated' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"174","text":"172"},"'DaelimMain' is defined but never used.","'Insert' is defined but never used.","no-global-assign","no-unsafe-negation",[81,111],"BrowserRouter",[36,66],[59,89]]